// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A product recommendation AI agent.
 *
 * - generateProductRecommendations - A function that handles the product recommendation process.
 * - GenerateProductRecommendationsInput - The input type for the generateProductRecommendations function.
 * - GenerateProductRecommendationsOutput - The return type for the generateProductRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateProductRecommendationsInputSchema = z.object({
  pastOrders: z.array(z.string()).describe('An array of product names from the customer\'s past orders.'),
  popularCombinations: z.array(z.string()).describe('An array of product names representing popular combinations.'),
});
export type GenerateProductRecommendationsInput = z.infer<typeof GenerateProductRecommendationsInputSchema>;

const GenerateProductRecommendationsOutputSchema = z.object({
  recommendations: z.array(z.string()).describe('An array of product names that are recommended to the customer.'),
});
export type GenerateProductRecommendationsOutput = z.infer<typeof GenerateProductRecommendationsOutputSchema>;

export async function generateProductRecommendations(input: GenerateProductRecommendationsInput): Promise<GenerateProductRecommendationsOutput> {
  return generateProductRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateProductRecommendationsPrompt',
  input: {schema: GenerateProductRecommendationsInputSchema},
  output: {schema: GenerateProductRecommendationsOutputSchema},
  prompt: `You are a helpful AI assistant that recommends products to customers based on their past orders and popular combinations.

Past Orders: {{#each pastOrders}}{{{this}}}{{#unless @last}}, {{/unless}}{{/each}}
Popular Combinations: {{#each popularCombinations}}{{{this}}}{{#unless @last}}, {{/unless}}{{/each}}

Based on this information, recommend products that the customer might like. Return only an array of product names. Limit to 5 recommendations. Do not repeat any product names from past orders.
`,
});

const generateProductRecommendationsFlow = ai.defineFlow(
  {
    name: 'generateProductRecommendationsFlow',
    inputSchema: GenerateProductRecommendationsInputSchema,
    outputSchema: GenerateProductRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
